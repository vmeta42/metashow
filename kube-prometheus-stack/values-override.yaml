kubeTargetVersionOverride: "1.20.5"
defaultRules:
  create: false

global:
  rbac:
    create: true
    pspEnabled: false

alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - match:
          alertname: Watchdog
        receiver: 'null'
    receivers:
    - name: 'null'
    templates:
    - '/etc/alertmanager/config/*.tmpl'
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations: 
      traefik.ingress.kubernetes.io/buffering: |
        maxRequestBodyBytes = 0
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
    - monitor-alertmanager.dev.21vianet.com
    paths:
    - /
    tls:
    - secretName: alertmanager-general-tls
      hosts:
      - monitor-alertmanager.dev.21vianet.com
  alertmanagerSpec:
    image:
      repository: quay.io/prometheus/alertmanager
      tag: v0.23.0
    replicas: 3
    retention: 120h
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: csi-rbd-sc
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    externalUrl: https://monitor-alertmanager.dev.21vianet.com
    resources:
      requests:
        memory: 2048Mi
        cpu: 500m
      limits:
        memory: 2048Mi
        cpu: 500m
  extraSecret:
    name: "alertmanager-general-tls"
    data:
      tls.key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpAIBAAKCAQEA4IH5X6MOJDQwsiQj5O5PD5bjIPtEVJACfNZloFcBlI2yfGmx
        unMCVziGdDQ9CjMZlQtDLfLumXEGVhR/XU6vNyXTwUKt1n4fJYZLHaVwex4gjT/6
        MVkrdXIPHSou42BHoEevZ8z/zbhNSmPbDDeTfdDzAY2Qd2g3BurB3Cpok7jI38yp
        BaIpHNOtSIeLqBjFoG11nSX/vLyvjvHJYLZJ85aCNbMnYD7IBpAdtwI4cPXVGkYR
        Njd2UqTm32m8lzkNSuHShVOkVAzv9ZBp4bm5gj+D9UVtGYAWUxuHuzjCgzYw+HQa
        9c38eli2TX7+T5Z+FPLtrY9FtvDfbKOx9HQeFQIDAQABAoIBAGFhn1SPepPTm4e5
        y2QCxoJhlZV5x/LSIHIb4SsCcmoIaHI0umXAezRwDUocWpmw/pi6sOIebMZb0z7F
        V1WWysOmAcrjbFoMjOAO90gducN9lusN5C1Bm2svFUU2Re5Uldz9GyVwM0j9d3Ec
        DSiodq5tUurKh+5zYuL6MyqXrpLcFSCpytc+IR2nSN4oOQBk9bl7MU5Mb8xU9zNp
        tv/OE3/T+bXiywk9W0yhDLH+gyg+W8U+PcmbsyO4R1TonUXxF16aStSPhTYURO7g
        k+zko0zgV4TGYD+XR3oGb+JmBQVvEDEAhNagg2ETqpFHGMxUS+A7JXV+rRG3aqyJ
        GvIuqoUCgYEA9ipgclaDGriiKoG/fSptmqKBTJm8tywiLz6R7ErN5u0vyES8RKJm
        OLH1qXeq67fKbMaXr/n0KoY6EstF98c/1f0bIEju0W8lt4KC+bqmhDQonlnpVd7x
        HFAdK3HwKZY7vvaV4JsfKjPbTmnIxLSeHISpNKx+tqnK7/0p4K/FIYcCgYEA6XoY
        VOW0PQ0LGPwQ+13aOs+Ejbe435btckDAKjswoFp9liVDkYU+INnRoxNkZsBg2uz9
        t9xivJR0BcmXrWABKkQ+CuM6HNeUZ9XNbbnVPU5qt30Q6+KtiCAHNrd53OCWAEjz
        hwaj430UuEX3EGkGVntpuNqzLzhVlHrn5YmB2oMCgYEAo7MenCqH2Pc7cEUEUHos
        lQ7IKWZ7JtyEhyJ268n7Dzxf8DA1evb8P2uo0F+yHDsGtDuEmBQCmVzVtbXT+6hW
        /TjqFxgpKMFfNZ/m9ad4IKaG9HcaQm6VrJxiKYgFi8JKTP2yQcEmgmwlxQl358es
        9Y4K7+peAZ78Q4f5l1+MGnUCgYBsaTwpF6wUeR0BEfJUteSiUD+NipS2hZ9l4PkZ
        4vgWTU5pTI5OYN9TY7D7FwMUzxlqLoc1O4lBZXFmSpA6egywcpWYeqA+Sj/n4xgL
        bjG80M+uuc0EqvHG9pBC8PkN/d7I7RbfSM8Kz8ayNhKdtRazS4Twx+RR9cePNW6+
        X5ZDPwKBgQCmeu63sXjQfVMhCxggykTtrJQPSr0kRg/8UQNid1ybOftvVcGh6FXz
        F94edvSMxQimXPASale+2kT/b8W+U1qRKDKAsU8OfmkCZ08o26LjjzOlqub99F6X
        BARuFOt5uxIEflJL6EH/HZLUnQk2A/rmKkXexU6MNc7NNEA0fDERxg==
        -----END RSA PRIVATE KEY-----
      tls.crt: |
        -----BEGIN CERTIFICATE-----
        MIIDhzCCAm+gAwIBAgIJAIVoissb1VN+MA0GCSqGSIb3DQEBCwUAMGQxCzAJBgNV
        BAYTAkNOMQswCQYDVQQIDAJCSjELMAkGA1UEBwwCQkoxETAPBgNVBAoMCDIxdmlh
        bmV0MRcwFQYDVQQLDA5Tb2Z0d2FyZUNlbnRlcjEPMA0GA1UEAwwGcm9vdGNhMCAX
        DTIyMDUyNDA4MDYxMFoYDzIxMjIwNDMwMDgwNjEwWjBqMQswCQYDVQQGEwJDTjEL
        MAkGA1UECAwCQkoxCzAJBgNVBAcMAkJKMREwDwYDVQQKDAgyMXZpYW5ldDEXMBUG
        A1UECwwOU29mdHdhcmVDZW50ZXIxFTATBgNVBAMMDGFsZXJ0bWFuYWdlcjCCASIw
        DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOCB+V+jDiQ0MLIkI+TuTw+W4yD7
        RFSQAnzWZaBXAZSNsnxpsbpzAlc4hnQ0PQozGZULQy3y7plxBlYUf11Orzcl08FC
        rdZ+HyWGSx2lcHseII0/+jFZK3VyDx0qLuNgR6BHr2fM/824TUpj2ww3k33Q8wGN
        kHdoNwbqwdwqaJO4yN/MqQWiKRzTrUiHi6gYxaBtdZ0l/7y8r47xyWC2SfOWgjWz
        J2A+yAaQHbcCOHD11RpGETY3dlKk5t9pvJc5DUrh0oVTpFQM7/WQaeG5uYI/g/VF
        bRmAFlMbh7s4woM2MPh0GvXN/HpYtk1+/k+WfhTy7a2PRbbw32yjsfR0HhUCAwEA
        AaM0MDIwMAYDVR0RBCkwJ4IlbW9uaXRvci1hbGVydG1hbmFnZXIuZGV2LjIxdmlh
        bmV0LmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAiQKGh//Jy1oLZMEfhVtAmNUEwi2s
        Px5gL0V380828gnW1kcXKpM9dHDxnsyNbNyU9tUu8bTB/aOHkxwL52av8lwpc1As
        NN/zYqMtPCdJ0vbwmSgWSdNoSf734RoUQWywU5NKzLjjijW3a0yzJzGjWNHHKWcD
        trP2M14xyVUcbYcJ7HRnESkBE9tM0jk056QbVdXGjyQ8Rnk1cHUk7B8VhkeO8+1f
        KGN1zmeMLg+mkbJfSuUC6OyH+ekB364+7hH7aWgpbF+dJMMvKLgApHJuSe8jueh+
        0L0m6XtpNJbUfgjt1S/yGohBYpyUMCnvyuxXJcPr6EvUUJSmpKc1J2aToQ==
        -----END CERTIFICATE-----
grafana:
  deploymentStrategy:
    type: Recreate
  grafana.ini:
    smtp:
      enabled: true
      host: "mail.21vianet.com:587"
      user: gitinfo@21vianet.com
      password: 21Vnet@Rdc042
      skip_verify: true
      from_address: "gitinfo@21vianet.com"
    alerting:
      enabled: true
      execute_alerts: true
    auth.ldap:
      enabled: true
      allow_sign_up: true
      config_file: /etc/grafana/ldap.toml
  ldap:
    enabled: true
    existingSecret: ""
    bind_password: "admin"
    config: |-
      verbose_logging = true

      [[servers]]
      host = "21vianet.com"
      port = 3268
      use_ssl = false
      start_tls = false
      ssl_skip_verify = false
      bind_dn = "cn=gitadm,ou=serverusers,ou=21vianet,dc=21vianet,dc=com"
      bind_password = '{{.Values.ldap.bind_password}}'
      search_filter = "(sAMAccountName=%s)"
      search_base_dns = ["dc=21vianet,dc=com"]

      [servers.attributes]
      name = "givenName"
      surname = "sn"
      username = "cn"
      member_of = "memberOf"
      email =  "mail"

      [[servers.group_mappings]]
      group_dn = "*"
      org_role = "Viewer"
  enabled: true
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: cst
  adminPassword: prom-operator
  plugins: ["http://thanos-minio.kube-admin:9000/public/alexanderzobnin-zabbix-app-4.2.4.zip;custom-plugins"]
  downloadDashboardsImage:
    repository: harbor.dev.21vianet.com/library/curl
    tag: 7.73.0
  persistence:
    type: pvc
    enabled: true
    storageClassName: csi-rbd-sc
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  initChownData:
    enabled: true
    image:
      repository: harbor.dev.21vianet.com/library/bitnami-shell
      tag: "10-debian-10-r278"
      pullPolicy: IfNotPresent
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'ceph'
        orgId: 1
        folder: 'Ceph'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/ceph
      - name: 'openstack'
        orgId: 1
        folder: 'Openstack'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/openstack
      - name: 'zabbix'
        orgId: 1
        folder: 'Zabbix'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/zabbix

  dashboards:
    zabbix:
      zabbix-server:
        file: dashboards/zabbix-server.json
      zabbix-system-status:
        file: dashboards/zabbix-system-status.json
      agent-server:
        file: dashboards/agent-server.json
      network:
        file: dashboards/network.json
    ceph:
      cluster:
        file: dashboards/ceph/cluster.json
      osds:    
        file: dashboards/ceph/osds.json
      pools:
        file: dashboards/ceph/pools.json
      node-exporter:
        file: dashboards/ceph/node-exporter.json
    openstack:
      cluster:
        file: dashboards/openstack/openstack-exporter.json
      libvirt:
        file: dashboards/openstack/libvirt.json


  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/buffering: |
        maxRequestBodyBytes = 0
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - monitor.dev.21vianet.com
    path: /
    tls:
    - secretName: monitor-general-tls
      hosts:
      - monitor.dev.21vianet.com
  image:
    repository: harbor.dev.21vianet.com/library/grafana
    tag: 8.3.2
  sidecar:
    image:
      repository: harbor.dev.21vianet.com/library/k8s-sidecar
      tag: 1.14.2
    dashboards:
      enabled: true
      label: grafana_dashboard
      multicluster:
        global:
          enabled: true
        etcd:
          enabled: false
      provider:
        allowUiUpdates: false
        folder: Kubernetes
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
      defaultDatasourceScrapeInterval: 30s
      createPrometheusReplicasDatasources: false
      label: grafana_datasource
  zabbix:
    password: "test"


  ## Configure additional grafana datasources (passed through tpl)
  ## ref: http://docs.grafana.org/administration/provisioning/#datasources
  additionalDataSources:
  - name: k8s
    access: proxy
    basicAuth: false
    editable: false
    jsonData:
        tlsSkipVerify: true
    orgId: 1
    type: prometheus
    url: http://thanos-query-frontend:9090
    version: 1
  - name: Zabbix
    access: proxy
    orgId: 1
    basicAuth: false
    type: alexanderzobnin-zabbix-datasource
    typeLogoUrl: ''
    url: http://172.22.50.228/api_jsonrpc.php
    password: ''
    user: ''
    database: ''
    basicAuthUser: ''
    basicAuthPassword: ''
    withCredentials: false
    isDefault: false
    jsonData:
      cacheTTL: ''
      dbConnectionEnable: false
      disableDataAlignment: false
      trends: true
      trendsFrom: ''
      trendsRange: ''
      username: admin
      password: "{{.Values.grafana.zabbix.password }}"
    secureJsonFields:
      password: true
    version: 6
    readOnly: false
  - name: Zabbix-5.4
    access: proxy
    orgId: 1
    basicAuth: false
    type: alexanderzobnin-zabbix-datasource
    typeLogoUrl: ''
    url: http://172.22.50.138/api_jsonrpc.php
    password: ''
    user: ''
    database: ''
    basicAuthUser: ''
    basicAuthPassword: ''
    withCredentials: false
    isDefault: false
    jsonData:
      cacheTTL: ''
      disableDataAlignment: false
      trends: true
      trendsFrom: ''
      trendsRange: ''
      username: admin
      password: "{{.Values.grafana.zabbix.password }}"
    secureJsonFields:
      password: true
    version: 4
    readOnly: false


kubeApiServer:
  enabled: false
kubelet:
  enabled: false
kubeControllerManager:
  enabled: false
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubeStateMetrics:
  enabled: false
nodeExporter:
  enabled: false
prometheusOperator:
  enabled: true
  tls:
    enabled: true
    tlsMinVersion: VersionTLS13
    internalPort: 10250
  admissionWebhooks:
    failurePolicy: Fail
    enabled: true
    patch:
      enabled: true
      image:
        repository: harbor.dev.21vianet.com/library/kube-webhook-certgen
        tag: v1.0
        sha: ""
        pullPolicy: IfNotPresent

  namespaces: 
    releaseNamespace: true
    additional:
    - kube-system
  kubeletService:
    enabled: false
  resources: 
    limits:
      cpu: 4
      memory: 4096Mi
    requests:
      cpu: 2
      memory: 2048Mi
  image:
    repository: harbor.dev.21vianet.com/library/prometheus-operator
    tag: v0.52.1
    prometheusDefaultBaseImage: harbor.dev.21vianet.com/library/prometheus
    alertmanagerDefaultBaseImage: harbor.dev.21vianet.com/library/alertmanager
  prometheusConfigReloader:
    image:
      repository: harbor.dev.21vianet.com/library/prometheus-config-reloader
      tag: v0.52.1
  thanosImage:
    repository: harbor.dev.21vianet.com/library/thanos
    tag: v0.23.1

prometheus:
  enabled: true
  thanosService:
    enabled: true
    type: ClusterIP
    portName: grpc
    port: 10901
    targetPort: "grpc"
    httpPortName: http
    httpPort: 10902
    targetHttpPort: "http"
    clusterIP: "None"
  service:
    port: 9090
    targetPort: 9090
    type: ClusterIP
  servicePerReplica:
    enabled: false
  podDisruptionBudget:
    enabled: false
  ingress:
    enabled: false
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/buffering: |
        maxRequestBodyBytes = 0
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - prometheus.dev.21vianet.com
    paths: 
      - /
    pathType: Prefix
    tls: 
      - secretName: monitor-general-tls
        hosts:
          - prometheus.dev.21vianet.com
  additionalConfigs:
    dev-config: ""
    prod-config: ""
  prometheusSpec:
    disableCompaction: false
    apiserverConfig: {}
    scrapeInterval: "30s"
    scrapeTimeout: "15s"
    enableAdminAPI: false
    web: {}
    image:
      repository: harbor.dev.21vianet.com/library/prometheus
      tag: v2.31.1
    alertingEndpoints: []
    # - name: ""
    #   namespace: ""
    #   port: http
    #   scheme: http
    #   pathPrefix: ""
    #   tlsConfig: {}
    #   bearerTokenFile: ""
    #   apiVersion: v2

    externalUrl: "https://prometheus.dev.21vianet.com"
    retention: 365d
    retentionSize: "200GB"
    walCompression: false
    paused: false
    replicas: 1
    shards: 1
    logLevel: info
    logFormat: logfmt
    routePrefix: /
    resources:
      requests:
        memory: 4096Mi
        cpu: 4
      limits:
        memory: 4096Mi
        cpu: 4
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: csi-rbd-sc
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 300Gi
    configMaps: []
    additionalScrapeConfigs: []
    ## If additional scrape configurations are already deployed in a single secret file you can use this section.
    ## Expected values are the secret name and key
    ## Cannot be used with additionalScrapeConfigs
    additionalScrapeConfigsSecret:
      enabled: true
      name: monitor-kube-prometheus-st-prometheus-scrape-custom-confg
      key: additional-scrape-custom-configs.yaml

    additionalAlertManagerConfigs: []
    # - consul_sd_configs:
    #   - server: consul.dev.test:8500
    #     scheme: http
    #     datacenter: dev
    #     tag_separator: ','
    #     services:
    #       - metrics-prometheus-alertmanager
    additionalAlertManagerConfigsSecret: {}
      # name:
      # key:
    additionalAlertRelabelConfigs: []
    # - separator: ;
    #   regex: prometheus_replica
    #   replacement: $1
    #   action: labeldrop
    ## Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment.
    ## This section is experimental, it may change significantly without deprecation notice in any release.
    ## This is experimental and may change significantly without backward compatibility in any release.
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#thanosspec
    ##
    thanos:
      resources:
        requests:
          memory: 4096Mi
          cpu: 4
        limits:
          memory: 4096Mi
          cpu: 4
